!function(e){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var o;"undefined"!=typeof window?o=window:"undefined"!=typeof global?o=global:"undefined"!=typeof self&&(o=self),o.polygonClipper=e()}}(function(){var define;return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a="function"==typeof require&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}for(var i="function"==typeof require&&require,o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module){var Clipper=require("./src/clipper.js");module.exports=function(subj,clip,process){var instance=new Clipper;return instance.overlay(subj,clip,process)}},{"./src/clipper.js":7}],2:[function(require,module,exports){!function(){function Item(data,prev,next){this.next=next,next&&(next.prev=this),this.prev=prev,prev&&(prev.next=this),this.data=data}function FastList(){return this instanceof FastList?(this._head=null,this._tail=null,void(this.length=0)):new FastList}FastList.prototype={push:function(data){this._tail=new Item(data,this._tail,null),this._head||(this._head=this._tail),this.length++},pop:function(){if(0===this.length)return void 0;var t=this._tail;return this._tail=t.prev,t.prev&&(t.prev=this._tail.next=null),this.length--,1===this.length?this._head=this._tail:0===this.length&&(this._head=this._tail=null),t.data},unshift:function(data){this._head=new Item(data,null,this._head),this._tail||(this._tail=this._head),this.length++},shift:function(){if(0===this.length)return void 0;var h=this._head;return this._head=h.next,h.next&&(h.next=this._head.prev=null),this.length--,1===this.length?this._tail=this._head:0===this.length&&(this._head=this._tail=null),h.data},item:function(n){0>n&&(n=this.length+n);for(var h=this._head;n-->0&&h;)h=h.next;return h?h.data:void 0},slice:function(n,m){if(n||(n=0),m||(m=this.length),0>m&&(m=this.length+m),0>n&&(n=this.length+n),m===n)return[];if(n>m)throw new Error("invalid offset: "+n+","+m+" (length="+this.length+")");for(var len=m-n,ret=new Array(len),i=0,h=this._head;n-->0&&h;)h=h.next;for(;len>i&&h;)ret[i++]=h.data,h=h.next;return ret},drop:function(){FastList.call(this)},forEach:function(fn,thisp){for(var p=this._head,i=0,len=this.length;len>i&&p;)fn.call(thisp||this,p.data,i,this),p=p.next,i++},map:function(fn,thisp){var n=new FastList;return this.forEach(function(v,i,me){n.push(fn.call(thisp||me,v,i,me))}),n},filter:function(fn,thisp){var n=new FastList;return this.forEach(function(v,i,me){fn.call(thisp||me,v,i,me)&&n.push(v)}),n},reduce:function(fn,val,thisp){var i=0,p=this._head,len=this.length;for(val||(i=1,val=p&&p.data,p=p&&p.next);len>i&&p;)val=fn.call(thisp||this,val,p.data,this),i++,p=p.next;return val}},"undefined"!=typeof exports?module.exports=FastList:"function"==typeof define&&define.amd?define("FastList",function(){return FastList}):(function(){return this}()).FastList=FastList}()},{}],3:[function(require,module){!function(){function allrings(polygon){var rings;return polygon.type&&polygon.coordinates&&("Polygon"===polygon.type?rings=polygon.coordinates:"MultiPolygon"===polygon.type&&(rings=polygon.coordinates.reduce(function(prev,cur){return prev.concat(cur)},[]))),rings}"undefined"!=typeof module&&module.exports?module.exports=allrings:window&&(window.geojsonAllRings=allrings)}()},{}],4:[function(require,module,exports){var intersection=function(){var vector={};vector.oA=function(segment){return segment.start},vector.AB=function(segment){var start=segment.start,end=segment.end;return{x:end.x-start.x,y:end.y-start.y}},vector.add=function(v1,v2){return{x:v1.x+v2.x,y:v1.y+v2.y}},vector.sub=function(v1,v2){return{x:v1.x-v2.x,y:v1.y-v2.y}},vector.scalarMult=function(s,v){return{x:s*v.x,y:s*v.y}},vector.crossProduct=function(v1,v2){return v1.x*v2.y-v2.x*v1.y};var self={};return self.vector=function(segment){return vector.AB(segment)},self.intersectSegments=function(a,b){var p=vector.oA(a),r=vector.AB(a),q=vector.oA(b),s=vector.AB(b),cross=vector.crossProduct(r,s),qmp=vector.sub(q,p),numerator=vector.crossProduct(qmp,s),t=numerator/cross,intersection=vector.add(p,vector.scalarMult(t,r));return intersection},self.isParallel=function(a,b){var r=vector.AB(a),s=vector.AB(b);return 0===vector.crossProduct(r,s)},self.isCollinear=function(a,b){{var p=vector.oA(a),r=vector.AB(a),q=vector.oA(b);vector.AB(b)}return 0===vector.crossProduct(vector.sub(p,q),r)},self.safeIntersect=function(a,b){return self.isParallel(a,b)===!1?self.intersectSegments(a,b):!1},self};intersection.intersectSegments=intersection().intersectSegments,intersection.intersect=intersection().safeIntersect,intersection.isParallel=intersection().isParallel,intersection.isCollinear=intersection().isCollinear,intersection.describe=function(a,b){var isCollinear=intersection().isCollinear(a,b),isParallel=intersection().isParallel(a,b),pointOfIntersection=void 0;return isParallel===!1&&(pointOfIntersection=intersection().intersectSegments(a,b)),{collinear:isCollinear,parallel:isParallel,intersection:pointOfIntersection}},exports=module.exports=intersection},{}],5:[function(require,module){function opposite(type){return"subject"===type?"clip":"subject"}var SortedList=require("./sorted-linked-list.js"),AET=function(options){var precision=options&&options.precistion?options.precision:-5;this.constructor({compare:function(a,b){if(Math.round10(a._head.data.xBot,precision)===Math.round10(b._head.data.xBot,precision)){var xBot=a._head.data.xBot,segA=a._head.data.segment,segB=b._head.data.segment,d1=Math.round10(Math.abs(segA.end.x-segB.end.x),precision),d2=Math.round10(Math.abs(segB.end.x-xBot)+Math.abs(xBot-segA.end.x),precision);return d1===d2?segA.end.x-segB.end.x:1/b._head.data.deltaX-1/a._head.data.deltaX}return a._head.data.xBot-b._head.data.xBot}})};AET.prototype=new SortedList,AET.prototype.getHead=function(){return this.head},AET.prototype.getHeadData=function(){return this.head.datum.getHeadData()},AET.prototype.getData=function(edge){return edge.datum.getHeadData()},AET.prototype.getBound=function(edge){return edge.datum},AET.prototype.isContributing=function(bound){var leftCount=this.lowerBound(bound).filter(function(bound){return bound.getHeadData().type===this[0]},[opposite(bound.getHeadData().type)]);return leftCount.length%2!==0},AET.prototype.getSide=function(bound){var leftCount=this.lowerBound(bound).filter(function(bound){return bound.getHeadData().type===this[0]},[bound.getHeadData().type]);return leftCount.length%2==0?"left":"right"},AET.prototype.succ=function(edge){var bound=edge.datum;return bound.shift(),edge},AET.prototype.swap=function(bound1,bound2){var b=this.find(bound1),c=this.find(bound2);if(b==this.head&&c==this.tail)return this.tail=b,this.head=c,this;b==this.head?this.head=c:c==this.tail&&(this.tail=b);var a=b.prev,d=c.next;return b.prev=c,b.next=d,d.prev=b,c.next=b,c.prev=a,a.next=c,this},AET.prototype.insertAfter=function(a,b){return b===this.tail?(a.next=this.head,this.tail=a,this.head.prev=this.tail):(a.next=b.next,b.next.prev=a),a.prev=b,b.next=a},module.exports=AET},{"./sorted-linked-list.js":12}],6:[function(require,module){var FastList=require("fast-list"),Bound=function(){};Bound.prototype=new FastList,Bound.prototype.getHeadData=function(){return this._head.data},Bound.prototype.getHead=function(){return this._head},module.exports=Bound},{"fast-list":2}],7:[function(require,module){var intersection=require("intersection"),geojsonAllRings=(require("fast-list"),require("geojson-allrings")),getLocalMinimaList=require("./local-minima-list.js"),List=require("./sorted-linked-list.js"),AETClass=require("./aet.js"),STClass=require("./st.js"),ITClass=require("./it.js"),Polygon=require("./polygon.js"),Clipper=(require("./precision.js"),function(){});Clipper.prototype.overlay=function(subj,clip){this.AET=new AETClass,this.PT=[],this.SBT=new List,this.LMT=new List({compare:function(a,b){return a.yBot-b.yBot}}),this.IT=null,this.updateLMTandSBT(subj,"subject"),this.updateLMTandSBT(clip,"clip");for(var yTop,yBot=this.SBT.pop();this.SBT.head;){for(;this.LMT.head&&Math.round10(this.LMT.head.datum.yBot,-5)===Math.round10(yBot,-5);)this.addEdgesOfLMT(this.LMT.pop());yTop=this.SBT.pop(),this.buildIntersections(yBot,yTop),this.processIntersections(),this.processAETedges(yBot,yTop),yBot=yTop}return this.extractPolygon()},Clipper.prototype.extractPolygon=function(){var output={type:"MultiPolygon",coordinates:[]},exteriors=[],holes={};return this.PT.filter(function(poly){return poly.left&&poly.right}).forEach(function(poly){poly.isHole?holes[poly.id]={coordinates:poly.getCoordinates()}:exteriors.push({coordinates:poly.getCoordinates(),holeIds:poly.holeIds})}),exteriors.forEach(function(poly){var coordinates=[poly.coordinates];poly.holeIds.forEach(function(id){coordinates.push(holes[id].coordinates)}),output.coordinates.push(coordinates)}),output},Clipper.prototype.updateLMTandSBT=function(poly,type){poly.type&&"Polygon"===poly.type?this.updateLMTandSBTwithPolygon(poly,type):poly.type&&"MultiPolygon"===poly.type?poly.coordinates.forEach(function(each){this.updateLMTandSBTwithPolygon({type:"Polygon",coordinates:each},type)},this):poly.type&&"Feature"===poly.type?this.updateLMTandSBTwithPolygon(poly.geometry,type):poly.type&&"FeatureCollection"===poly.type&&poly.features.forEach(function(pg){this.updateLMTandSBTwithPolygon(pg.geometry,type)},this)},Clipper.prototype.updateLMTandSBTwithPolygon=function(poly,type){geojsonAllRings(poly).forEach(function(ring){getLocalMinimaList(ring,type).forEach(function(node){this.LMT.insert(node),this.SBT.find(node.yBot)||this.SBT.insert(node.yBot)},this)},this)},Clipper.prototype.addEdgesOfLMT=function(node){this.AET.insert(node.left),this.AET.insert(node.right),node.left.getHeadData().side=this.AET.getSide(node.left),node.right.getHeadData().side=this.AET.getSide(node.right),this.AET.isContributing(node.left)&&this.addLocalMin(node.left.getHeadData().segment.start,node.left,node.right),this.SBT.find(node.left.getHeadData().yTop)||this.SBT.insert(node.left.getHeadData().yTop),this.SBT.find(node.right.getHeadData().yTop)||this.SBT.insert(node.right.getHeadData().yTop)},Clipper.prototype.addLocalMin=function(point,edge1,edge2){var poly=new Polygon(this.PT.length);return poly.addLeft(point),poly.addRight(point),edge1.getHeadData().polygon=poly,edge2.getHeadData().polygon=poly,this.PT.push(poly),poly},Clipper.prototype.addLocalMax=function(point,edge1,edge2){"left"===edge1.getHeadData().side?this.addLeft(point,edge1):this.addRight(point,edge1);var poly1=edge1.getHeadData().polygon,poly2=edge2.getHeadData().polygon;if(!poly1.isEqual(poly2)){poly2.appendPolygon(poly1,edge1.getHeadData().side);var curPoly,cur=this.AET.head;do curPoly=this.AET.getData(cur).polygon,curPoly&&curPoly.id===poly1.id&&(this.AET.getData(cur).polygon=poly2),cur=cur.next;while(cur!==this.AET.head)}poly2.isHole="right"===edge1.getHeadData().side,poly2.isHole&&this.assignToExterior(poly2,edge1,edge2)},Clipper.prototype.buildIntersections=function(yBot,yTop){var dY=yTop-yBot;ST=new STClass,this.IT=new ITClass;var intPoint,AETedge=this.AET.getHead(),xTop=this.AET.getData(AETedge).xBot+this.AET.getData(AETedge).deltaX*dY;this.AET.getData(AETedge).xTop=xTop,this.AET.getData(AETedge).isProcessed=!1;var STedge=ST.insert(this.AET.getBound(AETedge));for(AETedge=AETedge.next;AETedge!==this.AET.head;){for(this.AET.getData(AETedge).isProcessed=!1,xTop=this.AET.getData(AETedge).xBot+this.AET.getData(AETedge).deltaX*dY;Math.round10(xTop,-5)<Math.round10(ST.getData(STedge).xTop,-5)&&(intPoint=intersection.intersect(ST.getData(STedge).segment,this.AET.getData(AETedge).segment),intPoint.leftEdge=ST.getBound(STedge),intPoint.rightEdge=this.AET.getBound(AETedge),this.IT.insert(intPoint),STedge!==ST.head);)STedge=STedge.prev;this.AET.getData(AETedge).xTop=xTop,ST.insert(this.AET.getBound(AETedge)),STedge=ST.tail,AETedge=AETedge.next}},Clipper.prototype.processIntersections=function(){var intPoint=this.IT.getHead();if(intPoint){var intPointType,edge1,edge2,temp;do edge1=this.IT.getData(intPoint).leftEdge,edge2=this.IT.getData(intPoint).rightEdge,intPointType=this.classifyIntersection(edge1.getHeadData(),edge2.getHeadData()),edge1.getHeadData().type===edge2.getHeadData().type?(this.AET.isContributing(edge1)&&("left"===edge1.getHeadData().side?(this.addLeft(this.IT.getData(intPoint),edge1),this.addRight(this.IT.getData(intPoint),edge2)):(this.addRight(this.IT.getData(intPoint),edge1),this.addLeft(this.IT.getData(intPoint),edge2))),temp=edge1.getHeadData().side,edge1.getHeadData().side=edge2.getHeadData().side,edge2.getHeadData().side=temp):"maxima"===intPointType&&edge1.getHeadData().polygon&&edge2.getHeadData().polygon?this.addLocalMax(this.IT.getData(intPoint),edge1,edge2):"left-intermediate"===intPointType&&edge2.getHeadData().polygon?this.addLeft(this.IT.getData(intPoint),edge2):"right-intermediate"===intPointType&&edge1.getHeadData().polygon?this.addRight(this.IT.getData(intPoint),edge1):"minima"===intPointType&&this.addLocalMin(this.IT.getData(intPoint),edge1,edge2),this.AET.swap(edge1,edge2),temp=edge1.getHeadData().polygon,edge1.getHeadData().polygon=edge2.getHeadData().polygon,edge2.getHeadData().polygon=temp,intPoint=intPoint.next;while(intPoint!==this.IT.head)}},Clipper.prototype.processAETedges=function(yBot,yTop){var vertexType,data,isContributing,cur=this.AET.getHead();if(cur)do if(this.AET.getData(cur).isProcessed=!0,isContributing=this.AET.isContributing(this.AET.getBound(cur)),Math.round10(this.AET.getData(cur).yTop,-5)===Math.round10(yTop,-5))if(vertexType=this.AET.getData(cur).segment.end.type,"maxima"===vertexType){isContributing&&this.addLocalMax(this.AET.getData(cur).segment.end,this.AET.getBound(cur),this.AET.getBound(cur.next));var e1=cur,e2=cur.next;cur=cur.next.next,this.AET.remove(e1.datum),this.AET.remove(e2.datum)}else vertexType=this.AET.getData(cur).side+"-"+vertexType,"left-intermediate"===vertexType?isContributing&&this.addLeft(this.AET.getData(cur).segment.end,this.AET.getBound(cur)):"right-intermediate"===vertexType&&isContributing&&this.addRight(this.AET.getData(cur).segment.end,this.AET.getBound(cur)),data=this.AET.getData(cur),cur=this.AET.succ(cur),this.AET.getData(cur).side=data.side,this.AET.getData(cur).polygon=data.polygon,this.AET.getData(cur).isProcessed=!0,this.SBT.find(this.AET.getData(cur).yTop)||this.SBT.insert(this.AET.getData(cur).yTop),cur=cur.next;else this.AET.getData(cur).xBot=this.AET.getData(cur).xTop,cur=cur.next;while(!this.AET.getData(cur).isProcessed)},Clipper.prototype.addLeft=function(point,bound){bound.getHeadData().polygon.addLeft(point)},Clipper.prototype.addRight=function(point,bound){bound.getHeadData().polygon.addRight(point)},Clipper.prototype.assignToExterior=function(polygon,edge1){var edgeData,AETedge1=this.AET.find(edge1),cur=AETedge1?AETedge1.prev:null;if(cur)do{if(edgeData=this.AET.getData(cur),!edgeData.polygon||!edgeData.isHole){"left"===edgeData.side&&edgeData.polygon.holeIds.indexOf(polygon.id)<0&&(leftEdgeData=edgeData);break}cur=cur.prev}while(cur!==this.AET.tail);if(cur=AETedge1?AETedge1.next.next:null)do{if(edgeData=this.AET.getData(cur),!edgeData.polygon||!edgeData.isHole){"right"===edgeData.side&&edgeData.polygon.holeIds.indexOf(polygon.id)<0&&(rightEdgeData=edgeData);break}cur=cur.next}while(cur!==this.AET.head);leftEdgeData.polygon.id!==polygon.id&&leftEdgeData.polygon.id===rightEdgeData.polygon.id&&leftEdgeData.polygon.holeIds.push(polygon.id)},Clipper.prototype.classifyIntersection=function(edge1,edge2){var rules={"left-clip-x-left-subject":"left-intermediate","left-subject-x-left-clip":"left-intermediate","right-clip-x-right-subject":"right-intermediate","right-subject-x-right-clip":"right-intermediate","left-subject-x-right-clip":"maxima","left-clip-x-right-subject":"maxima","right-subject-x-left-clip":"minima","right-clip-x-left-subject":"minima"};return rules[edge1.side+"-"+edge1.type+"-x-"+edge2.side+"-"+edge2.type]},module.exports=Clipper},{"./aet.js":5,"./it.js":8,"./local-minima-list.js":9,"./polygon.js":10,"./precision.js":11,"./sorted-linked-list.js":12,"./st.js":13,"fast-list":2,"geojson-allrings":3,intersection:4}],8:[function(require,module){var SortedList=require("./sorted-linked-list.js"),IT=function(){this.constructor({compare:function(a,b){return Math.round10(a.y,-5)-Math.round10(b.y,-5)}})};IT.prototype=new SortedList,IT.prototype.getHead=function(){return this.head},IT.prototype.getHeadData=function(){return this.head.datum.headData()},IT.prototype.getData=function(intersection){return intersection.datum},module.exports=IT},{"./sorted-linked-list.js":12}],9:[function(require,module){function getBounds(path,polygonType){var type,bounds=[],partBound=[],totalDet=0,bound=[],vertex={};bound.det=0;for(var i=0;i<path.length;i++)(i<path.length-1||i==path.length-1&&0==partBound.length)&&(type=getNodeType(i,path),vertex={x:path[i][0],y:path[i][1],type:type},bound.push(vertex),bound.det+=i===path.length-1?getDet({x:path[i][0],y:path[i][1]},{x:path[1][0],y:path[1][1]}):getDet({x:path[i][0],y:path[i][1]},{x:path[i+1][0],y:path[i+1][1]}),"maxima"===vertex.type?(totalDet+=bound.det,"maxima"===bound[0].type?(0!==i&&(bound.det+=getDet(vertex,bound[0])),bound.length>1&&bounds.push(bound)):partBound=bound,bound=[],bound.det=0,bound.push(vertex)):"minima"===vertex.type&&(bound.minPos=bound.length-1));if(partBound.length>0){var det=bound.det+partBound.det+getDet(partBound[partBound.length-1],bound[0]),minPos=bound.minPos?bound.minPos:partBound.minPos+bound.length;bound=bound.concat(partBound),bound.minPos=minPos,bound.det=det,totalDet+=bound.det,bounds.push(bound)}for(var LML=[],i=0;i<bounds.length;i++)totalDet>0?(leftBound=bounds[i].slice(0,bounds[i].minPos+1).reverse(),rightBound=bounds[i].slice(bounds[i].minPos,bounds[i].length)):(rightBound=bounds[i].slice(0,bounds[i].minPos+1).reverse(),leftBound=bounds[i].slice(bounds[i].minPos,bounds[i].length)),LML.push({left:initiateEdges(leftBound,"left",polygonType),right:initiateEdges(rightBound,"right",polygonType),yBot:leftBound[0].y});return LML}function getDet(cur,next){return cur.x*next.y-cur.y*next.x}function getNodeType(ind,path){var prev,next,cur=path[ind];return 0===ind?(prev=path[path.length-2],next=path[ind+1]):ind===path.length-1?(prev=path[ind-1],next=path[1]):(prev=path[ind-1],next=path[ind+1]),cur[1]>prev[1]&&cur[1]>next[1]?"maxima":cur[1]<prev[1]&&cur[1]<next[1]?"minima":"intermediate"}function initiateEdges(points,side,type){for(var edge,list=new Bound,i=0;i<points.length-1;i++)edge={side:side,type:type},edge.segment={start:points[i],end:points[i+1]},edge.xBot=points[i].x,edge.yTop=points[i+1].y,edge.deltaX=(points[i+1].x-points[i].x)/(points[i+1].y-points[i].y),list.push(edge);return list}{var Bound=require("./bound.js");require("./sorted-linked-list.js")}module.exports=getBounds},{"./bound.js":6,"./sorted-linked-list.js":12}],10:[function(require,module){var Polygon=function(id){this.id=id,this.left=[],this.right=[],this.isHole=!1,this.holeIds=[]};Polygon.prototype.appendPolygon=function(polygon,side){if("right"===side){var left=this.left.concat(polygon.right.reverse().slice(0,polygon.right.length-1)).concat(polygon.left);this.left=left}else{var right=this.right.concat(polygon.left.reverse().slice(0,polygon.left.length-1)).concat(polygon.right);this.right=right}return polygon.left=null,polygon.right=null,this},Polygon.prototype.addLeft=function(point){return this.left.push(point),this},Polygon.prototype.addRight=function(point){return this.right.push(point),this},Polygon.prototype.extend=function(polygon){return this.left=polygon.left,this.right=polygon.right,this},Polygon.prototype.isEqual=function(polygon){return this.left===polygon.left&&this.right===polygon.right},Polygon.prototype.getCoordinates=function(){return this.right.concat(this.left.reverse()).map(function(pt){return[pt.x,pt.y]})},module.exports=Polygon},{}],11:[function(){!function(){function decimalAdjust(type,value,exp){return"undefined"==typeof exp||0===+exp?Math[type](value):(value=+value,exp=+exp,isNaN(value)||"number"!=typeof exp||exp%1!==0?0/0:(value=value.toString().split("e"),value=Math[type](+(value[0]+"e"+(value[1]?+value[1]-exp:-exp))),value=value.toString().split("e"),+(value[0]+"e"+(value[1]?+value[1]+exp:exp))))}Math.round10||(Math.round10=function(value,exp){return decimalAdjust("round",value,exp)}),Math.floor10||(Math.floor10=function(value,exp){return decimalAdjust("floor",value,exp)}),Math.ceil10||(Math.ceil10=function(value,exp){return decimalAdjust("ceil",value,exp)})}()},{}],12:[function(require,module){var Node,SortedCircularDoublyLinkedList;Node=function(){function Node(datum,prev,next){this.datum=datum,this.prev=prev,this.next=next}return Node}(),SortedCircularDoublyLinkedList=function(){function SortedCircularDoublyLinkedList(options){var opt=options||{};this.head=opt.head,this.tail=opt.tail,this.length=0,opt.compare&&(this.compare=opt.compare)}return SortedCircularDoublyLinkedList.prototype.compare=function(datum1,datum2){return datum1-datum2},SortedCircularDoublyLinkedList.prototype.insertAll=function(list){var x,_i,_len;for(null==list&&(list=[]),_i=0,_len=list.length;_len>_i;_i++)x=list[_i],this.insert(x);return this.head},SortedCircularDoublyLinkedList.prototype.insert=function(datum){var current,insertAfter,insertBefore,next,node;if(node=new Node(datum),insertBefore=function(a,b){return b===this.head?(a.prev=this.tail,this.head=a,this.tail.next=this.head):(a.prev=b.prev,b.prev.next=a),a.next=b,b.prev=a},insertAfter=function(a,b){return b===this.tail?(a.next=this.head,this.tail=a,this.head.prev=this.tail):(a.next=b.next,b.next.prev=a),a.prev=b,b.next=a},this.length++,null==this.head)return this.head=node,this.head.next=node,this.head.prev=node,this.tail=this.head,node;if(this.compare(this.head.datum,node.datum)>0)insertBefore(node,this.head),this.head=node;else{for(current=this.head;current!==this.tail&&(next=current.next,!(this.compare(next.datum,node.datum)>0));)current=current.next;insertAfter(node,current),current===this.tail&&(this.tail=node)}return node},SortedCircularDoublyLinkedList.prototype.remove=function(datum){var current;for(current=this.head;current.datum!==datum&&(current=current.next,current!==this.head););return this.length--,current!==this.head||current!==this.tail?(current===this.head?(this.head=current.next,this.tail.next=this.head,this.head.prev=this.tail):current.prev.next=current.next,current===this.tail?(this.tail=current.prev,this.head.prev=this.tail,this.tail.next=this.head):current.next.prev=current.prev):(this.head=null,void(this.tail=null))},SortedCircularDoublyLinkedList.prototype.contains=function(datum){return null!=this.find(datum)},SortedCircularDoublyLinkedList.prototype.find=function(datum){var current;if(this.head){current=this.head;do{if(0===this.compare(current.datum,datum))return current;current=current.next}while(current!==this.head);return null}return null},SortedCircularDoublyLinkedList.prototype.print=function(){var current,output;if(output="",null!=this.head){for(current=this.head,output+=""+current.datum;current.next!==this.head;)current=current.next,output+=", "+current.datum;return output}},SortedCircularDoublyLinkedList.prototype.pop=function(){var datum=this.head.datum;return this.remove(datum),datum},SortedCircularDoublyLinkedList.prototype.upperBound=function(datum){var upper=[],cur=this.find(datum);if(cur&&cur!==this.tail)do upper.push(cur.next.datum),cur=cur.next;while(cur!==this.tail);return upper},SortedCircularDoublyLinkedList.prototype.lowerBound=function(datum){var lower=[],cur=this.find(datum);if(cur&&cur!==this.head)do lower.push(cur.prev.datum),cur=cur.prev;while(cur!==this.head);return lower},SortedCircularDoublyLinkedList.prototype.lowerCount=function(datum){var count=0,cur=this.find(datum);if(cur&&cur!==this.head)do count++,cur=cur.prev;while(cur!==this.head);return count},SortedCircularDoublyLinkedList.prototype.upperCount=function(datum){var count=0,cur=this.find(datum);if(cur&&cur!==this.tail)do count++,cur=cur.next;while(cur!==this.tail);return count},SortedCircularDoublyLinkedList}(),module.exports=SortedCircularDoublyLinkedList},{}],13:[function(require,module){var SortedList=require("./sorted-linked-list.js"),ST=function(){this.constructor({compare:function(a,b){if(Math.round10(a._head.data.xTop,-5)===Math.round10(b._head.data.xTop,-5)){var xTop=a._head.data.xTop,segA=a._head.data.segment,segB=b._head.data.segment;return Math.round10(Math.abs(segA.start.x-segB.start.x),-5)===Math.round10(Math.abs(segB.start.x-xTop)+Math.abs(xTop-segA.start.x),-5)?segA.start.x-segB.start.x:1/a._head.data.deltaX-1/b._head.data.deltaX}return a._head.data.xTop-b._head.data.xTop}})};ST.prototype=new SortedList,ST.prototype.getHead=function(){return this.head},ST.prototype.getHeadData=function(){return this.head.datum.getHeadData()},ST.prototype.getData=function(edge){return edge.datum.getHeadData()},ST.prototype.getBound=function(edge){return edge.datum},module.exports=ST},{"./sorted-linked-list.js":12}]},{},[1])(1)});